name: "Build & Deploy Page"
on:
  workflow_dispatch:
  push:
    branches:
      - master
  schedule:
   # Run every morning to ensure component documentation is up to date on deployment
   - cron: '23 5 * * *'
  pull_request: # only runs up through build of sphinx

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: checkout control.ros.org
      uses: actions/checkout@v2
    - name: checkout ros2_control
      uses: actions/checkout@v2
      with:
        repository: ros-controls/ros2_control
        ref: master
        path: doc/ros2_control
    - name: checkout ros2_controllers
      uses: actions/checkout@v2
      with:
        repository: ros-controls/ros2_controllers
        path: doc/ros2_controllers
    - name: checkout ros2_control_demos
      uses: actions/checkout@v2
      with:
        repository: ros-controls/ros2_control_demos
        path: doc/ros2_control_demos
    - name: build sphinx docs
      uses: ammaraskar/sphinx-action@master
      with:
        docs-folder: "."
        pre-build-command: "apt-get update --allow-releaseinfo-change && apt-get install -y doxygen graphviz && pip3 install -r requirements.txt"
    - name: clone gh-pages branch
      uses: actions/checkout@v2
      if: github.event_name != 'pull_request'
      with:
        ref: gh-pages
        path: gh-pages
    - name: Commit documentation changes
      if: github.event_name != 'pull_request'
      run: |
        cp -r _build/html/* gh-pages/
        cd gh-pages
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update documentation" -a || true
        # The above command will fail if no changes were present, so we ignore
        # the return code.
    - name: Push changes
      if: ${{ github.event_name != 'pull_request' && !env.ACT }}
      uses: ad-m/github-push-action@master
      with:
        branch: gh-pages
        directory: gh-pages
        github_token: ${{ secrets.GITHUB_TOKEN }}
