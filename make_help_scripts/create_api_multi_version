#!/usr/bin/env bash

# shellckeck source=deploy_defines
# source deploy_defines regardless of startingpoint
DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi
. "$DIR/deploy_defines" || { echo "Could not source deploy_defines script. This is needed for correct execution. Exiting!"; exit; }

create_apis () {
    cd "$api_dir" || { echo "$api_dir does not exist. Exiting!"; exit "$ERRCODE"; }
    for branch in "${!branch_version[@]}";
        do git checkout ${branch_version[$branch]};
        git pull
        doxygen doc/Doxyfile
        mkdir -p ../../"$build_dir"/html/"$branch"/doc/api/
        cp -r doc/_build/html/. ../../"$build_dir"/html/"$branch"/doc/api/
        rm -rf doc/_build
    done
}

cleanup() {
    cd "$base_dir" || { echo "Changing back to basdir went wrong. You have to remove $api_dir yourself. Exiting!"; exit "$ERRCODE"; }
    if [ -d "$api_dir" ];
    then
        rm -rf "$api_dir"
    else
        echo "Could not delete $api_dir. Something went wrong. You have to cleanup yourself. Exiting!"
        exit
    fi
}

cd "$base_dir" || { echo "Could not checkout base dir of control.ros.org. Exiting!"; exit "$ERRCODE"; }
if [ -d "$api_dir" ];
then
    create_apis
    cleanup
else
    git clone https://github.com/ros-controls/"$api_repo" doc/"$api_repo" || { echo "Could not clone $api_repo. Exiting!"; exit "$ERRCODE"; }
    create_apis
    cleanup
fi
